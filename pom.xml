<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>29</version>
    </parent>

    <groupId>org.apache.pulsar</groupId>
    <artifactId>pulsar-sql</artifactId>
    <version>4.1.0-SNAPSHOT</version>
    <name>Pulsar SQL :: Parent</name>

    <modules>
        <module>trino-pulsar</module>
        <module>trino-pulsar-plugin</module>
        <module>trino-distribution</module>
    </modules>
    <properties>
        <project.build.targetJdk>22</project.build.targetJdk>
        <!-- for reproducible build support, updated by release plugin -->
        <project.build.outputTimestamp>2024-10-03T18:16:23Z</project.build.outputTimestamp>
        <!-- TODO remove this property when no module overrides it -->
        <trino.error-prone.guarded-by>ERROR</trino.error-prone.guarded-by>

        <air.check.skip-spotbugs>true</air.check.skip-spotbugs>
        <air.check.skip-pmd>true</air.check.skip-pmd>
        <air.check.skip-jacoco>true</air.check.skip-jacoco>
        <air.java.version>22.0.0</air.java.version>
        <air.javadoc.lint>syntax,reference,html,-missing</air.javadoc.lint>
        <air.modernizer.java-version>8</air.modernizer.java-version>
        <air.release.preparation-goals>clean verify -DskipTests</air.release.preparation-goals>
        <!--
          America/Bahia_Banderas has:
           - offset change since 1970 (offset Jan 1970: -08:00, offset Jan 2018: -06:00)
           - DST (e.g. at 2017-04-02 02:00:00 clocks turned forward 1 hour; 2017-10-29 02:00:00 clocks turned backward 1 hour)
           - has forward offset change on first day of epoch (1970-01-01 00:00:00 clocks turned forward 1 hour)
           - had forward change at midnight (1970-01-01 00:00:00 clocks turned forward 1 hour)
          -->
        <air.test.timezone>America/Bahia_Banderas</air.test.timezone>
        <!-- Be conservative about memory allotment, because tests start background process (e.g. docker containers) -->
        <air.test.jvmsize>3g</air.test.jvmsize>
        <!-- G1 default region size for a small heap is 1MB. Tests (TestHiveConnectorTest.testMultipleWritersWhenTaskScaleWritersIsEnabled) in particular
             were observed allocating large number of byte[] of about 1.6MB in size, thus being treated as humongous allocations and preventing heap saturation.
             Force bigger region size in attempt to help G1 utilize heap fully. -->

        <air.test.jvm.additional-arguments>${air.test.jvm.additional-arguments.default}</air.test.jvm.additional-arguments>
        <airlift.version>273</airlift.version>
        <avro.version>1.12.0</avro.version>
        <docker.images.version>100</docker.images.version>
        <drift.version>1.22</drift.version>
        <!-- temporary downgrade due to https://github.com/google/error-prone/issues/4598 -->
        <errorprone.version>2.32.0</errorprone.version>
        <jna.version>5.15.0</jna.version>
        <joda.version>2.12.7</joda.version>
        <jsonwebtoken.version>0.12.6</jsonwebtoken.version>
        <jts.version>1.20.0</jts.version>
        <okio.version>3.9.1</okio.version>
        <packaging.version>${airlift.version}</packaging.version>
        <plugin.failsafe.version>${plugin.surefire.version}</plugin.failsafe.version>
        <pulsar.version>4.0.0-preview.1</pulsar.version>
        <jackson.version>2.18.0</jackson.version>
        <trino.version>461</trino.version>
        <extraJavaVectorArgs>--add-modules=jdk.incubator.vector</extraJavaVectorArgs>
        <!--
        Instructs Provisio to write runtime dependencies in the format groupId_artifactId-version.jar.
        This is important to avoid overwriting dependencies with the same name and version but different groupId.
        Since 1.1.0, the default behaviour for such conflicts changed from overwriting the artifact to failing the build.
        -->
        <provisio.fallbackTargetFileNameMode>GA</provisio.fallbackTargetFileNameMode>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-base </artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jsonSchema</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>bom</artifactId>
                <version>${airlift.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.pulsar</groupId>
                <artifactId>pulsar-bom</artifactId>
                <version>${pulsar.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${errorprone.version}</version>
            </dependency>

            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>1.20.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>main</id>
            <activation>
                <property>
                    <name>disableSqlMainProfile</name>
                    <!-- always active unless true is passed as a value -->
                    <value>!true</value>
                </property>
            </activation>
            <modules>
                <module>trino-pulsar</module>
                <module>trino-pulsar-plugin</module>
                <module>trino-distribution</module>
            </modules>
        </profile>
        <profile>
            <id>pulsar-sql-tests</id>
            <modules>
                <module>trino-pulsar</module>
                <module>trino-pulsar-plugin</module>
                <module>trino-distribution</module>
            </modules>
        </profile>
        <!--
        The only working way for OWASP dependency checker plugin
        to exclude module when failBuildOnCVSS is used
        in the root pom's plugin.
        -->
        <profile>
            <id>owasp-dependency-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependency-check-maven.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
